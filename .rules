rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
   	match /users/{user} {
    	allow read: if request.auth != null || true;
      allow write: if request.auth.uid == resource.id;
    }

    match /userSettings/{userSettings} {
    	allow get;
    	allow write: if request.auth.uid == request.resource.id;
    }

    match /groups/{group} {
    	allow read;
      allow update: if request.auth.uid == resource.data.owner || true;
      allow delete: if request.auth.uid == resource.data.owner;
      allow create: if request.auth != null;

      match /events/{event} {
        allow create: if request.auth.uid in get(/databases/$(database)/documents/groups/$(group)).data.members;
      	allow update, delete: if request.auth.uid == resource.data.hostId &&
                        request.auth.uid in get(/databases/$(database)/documents/groups/$(group)).data.members
        //allow read: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/groups/$(group)).data.members;

        match /attending/{attending} {
        	allow create: if request.auth.uid in get(/databases/$(database)/documents/groups/$(group)).data.members;
          allow delete, update: if request.auth.uid == resource.id
        }
      }

      match /links/{link} {
      	allow write: if request.auth.uid == get(/databases/$(database)/documents/groups/$(group)).data.owner;
      }
    }

    match /groups/{group}/{document=**} {
      allow read: if request.auth.uid in get(/databases/$(database)/documents/groups/$(group)).data.members
    }

    match /groups/{group}/links/{link} {
        allow read: if true;
    }
  }
}
